plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id("com.palantir.docker") version "0.36.0"
}

group = 'com.docker'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
// 변수 설정
def platform = project.hasProperty('platform') ? project.property('platform') : "frontend"

docker {
	if (platform == "frontend") {
		name "okqkrwhdtjd1234/frontend:"+version
		files "../frontend/dist"
		buildArgs(['DIST_DIR': "../"])
		dockerfile file("../devops/Dockerfile_frontend")
	} else {
		name "okqkrwhdtjd1234/backend:"+version
		files tasks.bootJar.outputs.files
		buildArgs(['JAR_FILE':tasks.bootJar.outputs.files.singleFile.name])
		dockerfile file("../devops/Dockerfile_backend")
	}
}

task buildDockerBackend(type: Exec) {
	workingDir project.rootDir
	commandLine 'gradlew.bat', 'docker','-Pplatform=backend'
}

task dockerComposeUpBackend(type: Exec, dependsOn: buildDockerBackend) {
	environment 'DOCKER_IMAGE_TAG', version
	commandLine 'docker-compose', '-f', '../devops/docker-compose.yml', 'up', '--build', '-d'
}

task buildFrontend(type: Exec) {
	workingDir '../frontend'
	commandLine 'C:\\Program Files\\nodejs\\npm.cmd', 'run', 'build'
}

task buildDockerFrontend(type: Exec, dependsOn: buildFrontend){
	workingDir project.rootDir
	commandLine 'cmd', '/c', 'gradlew.bat', 'docker'
}

task dockerComposeUpFrontend(type: Exec, dependsOn: buildDockerFrontend) {
	environment 'DOCKER_IMAGE_TAG', version
	commandLine 'docker-compose', '-f', '../devops/docker-compose.yml', 'up', '--build', '-d'
}
